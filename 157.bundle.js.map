{"version":3,"file":"157.bundle.js","mappings":"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","sources":["webpack://aleo-website/./node_modules/@aleohq/wasm/snippets/wasm-bindgen-rayon-7afa899f36665473/src/workerHelpers.js","webpack://aleo-website/webpack/bootstrap","webpack://aleo-website/webpack/runtime/define property getters","webpack://aleo-website/webpack/runtime/ensure chunk","webpack://aleo-website/webpack/runtime/get javascript chunk filename","webpack://aleo-website/webpack/runtime/global","webpack://aleo-website/webpack/runtime/harmony module decorator","webpack://aleo-website/webpack/runtime/hasOwnProperty shorthand","webpack://aleo-website/webpack/runtime/make namespace object","webpack://aleo-website/webpack/runtime/publicPath","webpack://aleo-website/webpack/runtime/importScripts chunk loading","webpack://aleo-website/webpack/startup"],"sourcesContent":["/**\n * Copyright 2021 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: we use `wasm_bindgen_worker_`-prefixed message types to make sure\n// we can handle bundling into other files, which might happen to have their\n// own `postMessage`/`onmessage` communication channels.\n//\n// If we didn't take that into the account, we could send much simpler signals\n// like just `0` or whatever, but the code would be less resilient.\n\nfunction waitForMsgType(target, type) {\n  return new Promise(resolve => {\n    target.addEventListener('message', function onMsg({ data }) {\n      if (data == null || data.type !== type) return;\n      target.removeEventListener('message', onMsg);\n      resolve(data);\n    });\n  });\n}\n\nwaitForMsgType(self, 'wasm_bindgen_worker_init').then(async data => {\n  // # Note 1\n  // Our JS should have been generated in\n  // `[out-dir]/snippets/wasm-bindgen-rayon-[hash]/workerHelpers.js`,\n  // resolve the main module via `../../..`.\n  //\n  // This might need updating if the generated structure changes on wasm-bindgen\n  // side ever in the future, but works well with bundlers today. The whole\n  // point of this crate, after all, is to abstract away unstable features\n  // and temporary bugs so that you don't need to deal with them in your code.\n  //\n  // # Note 2\n  // This could be a regular import, but then some bundlers complain about\n  // circular deps.\n  //\n  // Dynamic import could be cheap if this file was inlined into the parent,\n  // which would require us just using `../../..` in `new Worker` below,\n  // but that doesn't work because wasm-pack unconditionally adds\n  // \"sideEffects\":false (see below).\n  //\n  // OTOH, even though it can't be inlined, it should be still reasonably\n  // cheap since the requested file is already in cache (it was loaded by\n  // the main thread).\n  const pkg = await import('../../..');\n  await pkg.default(data.module, data.memory);\n  postMessage({ type: 'wasm_bindgen_worker_ready' });\n  pkg.wbg_rayon_start_worker(data.receiver);\n});\n\n// Note: this is never used, but necessary to prevent a bug in Firefox\n// (https://bugzilla.mozilla.org/show_bug.cgi?id=1702191) where it collects\n// Web Workers that have a shared WebAssembly memory with the main thread,\n// but are not explicitly rooted via a `Worker` instance.\n//\n// By storing them in a variable, we can keep `Worker` objects around and\n// prevent them from getting GC-d.\nlet _workers;\n\nexport async function startWorkers(module, memory, builder) {\n  const workerInit = {\n    type: 'wasm_bindgen_worker_init',\n    module,\n    memory,\n    receiver: builder.receiver()\n  };\n\n  _workers = await Promise.all(\n    Array.from({ length: builder.numThreads() }, async () => {\n      // Self-spawn into a new Worker.\n      //\n      // TODO: while `new URL('...', import.meta.url) becomes a semi-standard\n      // way to get asset URLs relative to the module across various bundlers\n      // and browser, ideally we should switch to `import.meta.resolve`\n      // once it becomes a standard.\n      //\n      // Note: we could use `../../..` as the URL here to inline workerHelpers.js\n      // into the parent entry instead of creating another split point -\n      // this would be preferable from optimization perspective -\n      // however, Webpack then eliminates all message handler code\n      // because wasm-pack produces \"sideEffects\":false in package.json\n      // unconditionally.\n      //\n      // The only way to work around that is to have side effect code\n      // in an entry point such as Worker file itself.\n      const worker = new Worker(new URL('./workerHelpers.js', import.meta.url), {\n        type: 'module'\n      });\n      worker.postMessage(workerInit);\n      await waitForMsgType(worker, 'wasm_bindgen_worker_ready');\n      return worker;\n    })\n  );\n  builder.build();\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t157: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkaleo_website\"] = self[\"webpackChunkaleo_website\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(9157);\n"],"names":["waitForMsgType","target","type","Promise","resolve","addEventListener","onMsg","data","removeEventListener","_workers","async","startWorkers","module","memory","builder","workerInit","receiver","all","Array","from","length","numThreads","worker","Worker","URL","postMessage","build","self","then","pkg","default","wbg_rayon_start_worker","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","id","loaded","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","keys","reduce","promises","u","g","globalThis","this","Function","window","hmd","create","children","set","Error","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","i","replace","p","b","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","chunkIds","moreModules","runtime","pop"],"sourceRoot":""}